"""
문제 난이도가 극악인거 같은데 왜 실버 2인지 모르겠다
2 x n 타일링 문제 2개를 풀것의 기억을 더듬어가며 문제를 해결해 보았다
2 x n 타일링 문제는 n에 따라서 반복되는 패턴을 코드로 바꾸었는데
같은 방법으로 접근해보았다

하지만 우리는 3 x n 타일을 2 x 1 or 1 x 2 타일들로 쪼개야한다는 점에서 n은 2의 배수여야함을 알았다.

문제를 푸는데 1시간 20분가량 걸렸다
기본적으로 간섭이 있는 덩어리들로 나누어서 해결하였다
이게 DP 문제라고 하기에는 뭔가 마음에 들지는 않았지만
큰 부분을 작은 부분으로 나눈다는 점에서는 딱 맞는 풀이인거 같다
"""

dp = [0 for _ in range(30 + 1)]
dp[2] = 3  # 이건 그냥 그려봐야 한다

N = int(input())
for i in range(4, N + 1, 2):
    dp[i] += dp[i - 2] * 3  # 전 항 x 3
    dp[i] += 2  # 개인의 고유 그림 (모든블럭이 결속되어있다)
    for j in range(2, i - 4 + 1, 2):
        # 제일 문제푸는데 어려웠던 부분
        dp[i] += dp[j] * 2

print(dp[N])
